#!/usr/bin/with-contenv bash

# reference
# https://github.com/caddyserver/forwardproxy
# https://github.com/caddyserver/forwardproxy/blob/master/docker-build/gen_caddyfile_and_start.sh

CADDYFILE="/config/Caddyfile"

generate_caddyfile() {
    mkdir -p "$(dirname "${CADDYFILE}")"

    echo "0.0.0.0:${PROXY_PORT:-8008}" > ${CADDYFILE}

    echo "forwardproxy {" >> ${CADDYFILE}
    if [[ ! -z ${PROXY_USER} ]] && [[ ! -z ${PROXY_PASS} ]]; then
        echo "  basicauth ${PROXY_USER} ${PROXY_PASS}" >> ${CADDYFILE}
    fi
    if [[ "${PROBE_RESISTANT}" = true ]]; then
        echo "  probe_resistance ${SECRET_LINK}" >> ${CADDYFILE}
    fi
    if [ "$(printenv GT_USE | tr -d '"' | tr -d "'")" == "true" ]; then
        echo "  upstream http://localhost:${GT_PORT:-21000}" >> ${CADDYFILE}
    fi
    echo "  hide_ip" >> ${CADDYFILE}
    echo "  hide_via" >> ${CADDYFILE}
    echo "}" >> ${CADDYFILE}
}

install_caddy() {
    echo "** building caddyserver..."
    apk add --no-cache --quiet -X http://dl-cdn.alpinelinux.org/alpine/edge/community --virtual=build-deps go git
    tmpdir=$(mktemp -d)
    cd $tmpdir
    cp /etc/default/caddy.go $tmpdir/main.go
    export GO111MODULE=on && \
        go mod init caddy >/dev/null 2>&1 && \
        go get github.com/caddyserver/caddy@v1 >/dev/null 2>&1
    echo "** installing caddyserver..."
    go install >/dev/null 2>&1
    mv /root/go/bin/caddy /usr/bin/caddy
    chmod a+x /usr/bin/caddy
    apk del --no-cache --quiet --purge build-deps
    rm -rf $tmpdir /root/go /root/.cache
}

command -v caddy >/dev/null 2>&1 || install_caddy

echo "** caddyserver $(caddy -version | cut -d' ' -f2) ready!"

if [ -f "${CADDYFILE}" ]; then
    echo "** using existing Caddyfile"
else
    echo "** generating new Caddyfile"
    generate_caddyfile
    chown abc:abc ${CADDYFILE}
fi
